# Google Earth Engine

The second half of this course dives into Google Earth Engine. This week, we covered the features of Google Earth Engine and some operations that the platform offers.

## Summary

Google Earth Engine (GEE) is a one-stop platform providing access to satellite images spanning over 30 years, including products from Sentinel, Landsat, MODIS, and other satellite missions [@googleearthengine]. GEE has a web-based code editor in JavaScript to perform different kinds of analysis or algorithms. As the code is run on the backend or on the Google servers, GEE becomes more accessible as users do not need to rely on their local devices to run potentially computationally intensive algorithms. GEE has experienced a meteoric rise in popularity since its launch in 2015, outpacing many other geospatial analysis software within 5 years, as evidenced by the number of journal articles utilising it.

```{r echo=FALSE, out.width='100%', fig.align='center'}
knitr::include_graphics('W6Image/WoS Articles.png')
```

***Number of Journal Articles Using Different Geospatial Analysis Software.*** **Source:** @ballinger2024

Various processes that can be performed in GEE include:

-   Spatial operations such as joins, zonal statistics and filtering

-   Reducing images by region(s) or neighbourhood

-   Machine learning

-   Supervised and unsupervised classification

-   Linear regression/multivariate multiple linear regression

-   And the list goes on...

To elaborate more on the linear regression process, it aims to model the relationship between dependent variable and independent variables. The example cited in class involved loading an image collection of NASA climate scenarios (NASA NEX-DCP30), filtering for the RCP 8.5 scenario (see @carbonbrief2019 for more) and date range from 2006 to 2050 [@googleearthenginea]. The linear regression was run with precipitation as the dependent variable and time as the independent variable. The map generated shows areas for continental US with the projected increase in precipitation in blue and the projected decreased in precipitation in red.

```{r echo=FALSE, out.width='100%', fig.align='center'}
knitr::include_graphics('W6Image/Reducers_linearFit.png')
```

***Map showing projected precipitation for continental US after applying linearFit() to the projected precipitation.*** **Source:** [@googleearthenginea]

## Application

This week’s practical was my first foray into using GEE. It took some time to get used to the syntax in JavaScript and we mosaicked and clipped images, performed texture measures, principal component analysis (PCA) and band maths. Below are some of the JavaScript codes and outputs generated for the study area of Delhi.

The glcmTexture() function was used to “compute texture metrics from the Gray Level Co-occurrence Matrix around each pixel of each band” [@googleearthenginee]. The brighter purple areas indicate high reflectance, typically found in built-up urban areas or industrial sites.

```{r echo=FALSE, out.width='100%', fig.align='center'}
knitr::include_graphics('W6Image/GLCM.png')
```

***Output of applying glcmTexture() function to Delhi.*** **Source:** Author's Own

Normalised Difference Vegetation Index (NDVI) is used to understand vegetation density and health [@usgsa]. NDVI is calculated as a ratio between the red (R) and near infrared (NIR) bands. The highest areas or darker green areas corresponds to forests and parks.

```{r echo=FALSE, out.width='100%', fig.align='center'}
knitr::include_graphics('W6Image/NDVI.png')
```

***Output of applying NDVI calculation to Delhi.*** **Source:** Author's Own

As mentioned earlier, there has been increased interest in GEE. GEE can be used for vegetation monitoring, landcover mapping, agricultural applications and disaster management, etc. [@mutanga2019]. GEE has the advantages of a large range of datasets, handling and processing huge data sets and applying various algorithms.

A specific study involves estimating the gross primary productivity (GPP) over croplands [@he2018]. MODIS has a short revisit period but coarse spatial resolution. On the other hand, Landsat has a longer revisit cycle but finer spatial resolution. To provide accurate estimations, a fused NDVI dataset can be constructed by combining both Landsat 5 or 7 and Terra MODIS reflectance data. Google Earth Engine has the advantage of integrating different satellite products in its platform. Furthermore, study utilises a substantial amount of data from 2008 to 2015. GEE helps in the computation process of developing the fused NDVI map and calculating the GPP for the crop types in the study area.

Another study that shows the computation power of GEE is the timelapse of forest cover change in the Amazon Forest [@theverge2023]. If the below classification was performed on a single computer for a 12-year period, the estimated processing time would be approximately 15 years. In comparison, the process would take only a few days at most in GEE.

```{r echo=FALSE, out.width='100%', fig.align='center'}
knitr::include_graphics('W6Image/Imazon___Desmatamento_na_Amazo_nia.gif')
```

***Timelapse of deforestation in Brazilian Amazon from 1985 to 2021.*** **Source:** @theverge2023

## Reflection

GEE is quite a powerful platform. It is easy to access different data products from Sentinel, Landsat, MODIS, etc. rather than manually downloading files from the respective websites. The platform takes awhile to get used as I have not used Javascript prior to this and seems like additional code is required to add features such as legend rather than clicking buttons in QGIS. Another thing that was puzzling was that one has to run the entire script instead of relevant code chunks each time so hopefully a patch comes out to improve the process. I am excited what other different processes I can execute in GEE in the weeks to come.
